{"version":3,"sources":["actions/tareasActions.js","componentes/AgregarTarea.js","actions/validarAction.js","componentes/ListadoTareas.js","reducers/cosaReducer.js","reducers/validacionReducer.js","reducers/index.js","store.js","localstorage.js","App.js","serviceWorker.js","index.js"],"names":["ordenarFase","type","ordenarFecha","console","log","ordenarVencimiento","AgregarTarea","useState","tareas","guardarTarea","fecha","guardarFechaInicio","vencimiento","guardarFechaVencimiento","dispatch","useDispatch","validarFormulario","estado","payload","validarFormularioAction","error","useSelector","state","className","onSubmit","e","tarea","preventDefault","trim","id","uuid","agregarTareaAction","placeholder","value","onChange","target","ListadoTareas","mensaje","Object","keys","length","option","defaultValue","map","key","fase","onClick","initialState","combineReducers","action","filter","sort","a","b","storageState","tareasStorage","localStorage","getItem","JSON","parse","obtenerStateStorage","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","tareasState","stringify","setItem","guardarStateStorage","getState","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1a9b47e.chunk.js","sourcesContent":["export const agregarTareaAction = (tarea) =>{\nreturn{\n    type:'AGREGAR_TAREA',\n    payload: tarea\n}\n}\nexport const borrarTareaAction = id => {\n    return{\n        type: 'BORRAR_TAREA',\n        payload: id\n    }\n}\nexport const ordenarFase =()=> {\n   return {\n       type:'ORDENAR_FASE'\n   } \n    }\n\nexport const ordenarFecha =()=> {\n    console.log(\"llega\");\n    return {\n        type:'ORDENAR_FECHA'\n    } \n     } \n\nexport const ordenarVencimiento =()=> {\n     return {\n        type:'ORDENAR_VENCIMIENTO'\n    } \n     } ","import React, {useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { agregarTareaAction } from '../actions/tareasActions';\nimport { validarFormularioAction } from '../actions/validarAction';\nimport uuid from 'uuid/v4';\n\n\nconst AgregarTarea = () => {\n\n//state del componente\nconst [tareas, guardarTarea] = useState('');\nconst [fecha, guardarFechaInicio] = useState('');\nconst [vencimiento, guardarFechaVencimiento] = useState('');\n\n\n//dispatch para ejecutar acciones\nconst dispatch = useDispatch();\nconst agregarNuevaTarea = (tarea) =>dispatch( agregarTareaAction(tarea) );\nconst validarFormulario = (estado) => dispatch( validarFormularioAction(estado));\n\n//useSelector es similiar a mapStateToProps en Hook\nconst error = useSelector( ( state ) => state.error);\n\n//cuando tarea es enviada\nconst submitNuevaTarea = e=>{\n    e.preventDefault();\n\n   if(tareas.trim() === ''|| fecha.trim() === '' || vencimiento.trim() === ''){\n    validarFormulario(true);\n    return;\n   }\n   validarFormulario(false);\n\n\n    //crear nueva tarea\nagregarNuevaTarea({\n    id:uuid(),\n    tareas,\n    fecha,\n    vencimiento\n})\n\n //reiniciar form\nguardarTarea('');\nguardarFechaInicio('');\nguardarFechaVencimiento('');\n\n}\n    return(\n        <div className=\"card mt-5\">\n            <div className=\"card-body\">\n                <h2 className=\"card-title text-center mb-5\">Agrega tareas aqu√≠</h2>\n                <form onSubmit={submitNuevaTarea}>\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Tareas</label>\n                        <div className=\"col-sm-8 col-lg-10\">\n                            <input \n                                type=\"text\" \n                                className=\"form-control\" \n                                placeholder=\"Tareas\" \n                                value={tareas}\n                                onChange={e => guardarTarea(e.target.value)}  \n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"form-group row\">\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha Inicio</label>\n                        <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\n                            <input \n                                type=\"date\" \n                                className=\"form-control\"\n                                value={fecha}\n                                onChange={e => guardarFechaInicio(e.target.value)}  \n                            />\n                        </div>                            \n\n                        <label className=\"col-sm-4 col-lg-2 col-form-label\">Fecha vencimiento</label>\n                        <div className=\"col-sm-8 col-lg-4  mb-4 mb-lg-0\">\n                            <input \n                                type=\"date\" \n                                className=\"form-control\" \n                                value={vencimiento}\n                                onChange={e => guardarFechaVencimiento(e.target.value)}  \n                            />\n                        </div>\n                    </div>\n                    <div className=\"form-group row justify-content-end\">\n                        <div className=\"col-sm-3\">\n                            <button type=\"submit\" className=\"btn btn-success w-100\">Agregar</button>\n                        </div>\n                    </div>\n                </form>\n               \n               { error.error ? <div className=\"alert alert-danger text-center p2\">Todos los campos son obligatorios</div> : null}\n            </div>\n    </div>\n    );\n}\n\nexport default AgregarTarea;","export const validarFormularioAction = estado => {\n    return {\n        type: 'VALIDAR_FORMULARIO',\n        payload: estado\n    }\n\n}","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { borrarTareaAction } from '../actions/tareasActions';\nimport {ordenarFase} from '../actions/tareasActions'\nimport { ordenarFecha} from '../actions/tareasActions';\nimport { ordenarVencimiento} from '../actions/tareasActions';\n\nconst ListadoTareas = () => {\n\n    //obtener tareas del state\n    const tarea = useSelector((state) => state.tarea);\n\n    //mensaje condicional\n    const mensaje = Object.keys(tarea.tarea).length === 0 ? 'No Hay Tareas' : 'Administra las Tareas aqu√≠';\n\n\n\n\n    //dispatch para mandar llamar laaciion de eliminar\nconst dispatch = useDispatch();\nfunction ordenarSelect(option){\n   if(option === \"Fase\"){\n    dispatch(ordenarFase());\n   }\n   if(option === \"Fecha Ingreso\"){\n    dispatch(ordenarFecha());\n   }\n   if(option === \"Fecha Vencimiento\"){\n    dispatch(ordenarVencimiento());\n   }\n};\n\n    return (\n        <div className=\"card mt-5\">\n            <div className=\"card-body\">\n                <h2 className=\"card-title text-center\">{mensaje}</h2>\n                <div className=\"lista-citas\">\n\n    <div>\n        <p className=\"card-text\">Ordenar:\n            <select onChange={e => ordenarSelect(e.target.value)} >\n   \n            <option value=\"0\" defaultValue>Seleccione orden</option>\n            <option value=\"Fecha Ingreso\">Fecha Ingreso</option>\n            <option value=\"Fase\">Fase</option>\n            <option value=\"Fecha Vencimiento\">Fecha Vencimiento</option>\n             </select>\n        </p>\n        </div>\n                    {tarea.tarea.map(tareas => (\n                        <div key={tareas.id} className=\"media mt-3\">\n                        <div className=\"media-body\">\n                            <h3 className=\"mt-0\">{tareas.tareas}</h3>\n                            <p className=\"card-text\"><span>Fecha Inicio</span>{tareas.fecha}</p>\n                            <span>Fecha Vencimiento:</span> <input type=\"date\" className=\"card-text\" value={tareas.vencimiento}/>\n                            <p className=\"card-text\"><span>Fase:</span> <br />{tareas.fase} \n                            <select  className=\"buttonAddFood\" id=\"burgerTypes\" value={tareas.fase}>\n                                <option value=\"Atrasada\">Atrasada</option>\n                                <option value=\"Pendiente\">Pendiente</option>\n                                <option value=\"Liberada\">Liberada</option>\n                            </select>\n                            </p>\n                            <button \n                                className=\"btn btn-danger\"\n                                onClick={() => dispatch(borrarTareaAction(tareas.id))\n                                }>Borrar &times;\n                                \n                            </button>\n                        </div>\n                    </div>\n                    ))}\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default ListadoTareas;","const initialState ={\n    tarea: []\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case 'AGREGAR_TAREA':\n            \n        \n            if(action.payload.fecha > action.payload.vencimiento){\n                action.payload.fase =\"Atrasada\";\n            }\n            if(action.payload.fecha <= action.payload.vencimiento){\n                action.payload.fase =\"Pendiente\"\n            }\n            console.log(action.payload);\n            return{\n                ...state,\n                tarea: [...state.tarea, action.payload]\n            }\n        case 'BORRAR_TAREA':\n            return{\n                ...state,\n                tarea: state.tarea.filter(tarea => tarea.id !== action.payload)\n            }\n            case 'ORDENAR_FASE':\n                return{\n                    ...state,\n                    tarea: state.tarea.sort(function (a, b){ if(a.fase>b.fase){return 1}else{return -1}}) \n                }\n            case 'ORDENAR_FECHA':\n                return{\n                    ...state,\n                    tarea: state.tarea.sort(function (a, b){ if(a.fecha>b.fecha){return 1}else{return -1}}) \n                }\n             case 'ORDENAR_VENCIMIENTO':\n                return{\n                    ...state,\n                    tarea: state.tarea.sort(function (a, b){ if(a.vencimiento>b.vencimiento){return 1}else{return -1}}) \n                        }\n            default:\n                return state;\n                \n        \n\n    }\n}","const initialState = {\n    error: false\n}\n\nexport default function(state = initialState, action){\n    switch(action.type){\n        case 'VALIDAR_FORMULARIO':\n            return{\n                ...state,\n                error: action.payload\n            }\n            default:\n                return state;\n    }\n}","import{ combineReducers} from 'redux';\nimport cosaReducer from './cosaReducer';\nimport validacionReducer from './validacionReducer';\n\nexport default combineReducers({\n    tarea: cosaReducer,\n    error: validacionReducer\n});","import { createStore } from 'redux';\nimport reducer from './reducers';\nimport { obtenerStateStorage, guardarStateStorage } from './localstorage';\n\n//definir state inicial\n// const initialState = [];\n\n\n//obtener tareas de localstorage\nconst storageState = obtenerStateStorage();\n\n const store = createStore(\n    reducer, \n    storageState,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe( () =>{\n    guardarStateStorage({\n        tarea: store.getState().tarea\n    })\n})\n\nexport default store;\n","export const obtenerStateStorage = () =>{\n    const tareasStorage = localStorage.getItem('tareas');\n    if(tareasStorage === null){\n        return undefined\n    }\n    return JSON.parse(tareasStorage);\n}\n\nexport const guardarStateStorage = state =>{\n    const tareasState = JSON.stringify(state);\n    localStorage.setItem('tareas',tareasState);\n}","import React from 'react';\nimport AgregarTarea from './componentes/AgregarTarea';\nimport ListadoTareas from './componentes/ListadoTareas';\n\n\n//redux\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"container\">\n     <header>\n       <h1 className=\"text-center\">Cosas por Hacer</h1>\n     </header>\n     <div className=\"row mt-3\">\n       <div className=\"col-md-6\">\n        <AgregarTarea />\n       </div>\n       <div className=\"col-md-6\">\n        <ListadoTareas />\n       </div>\n     </div>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}